// Automatically generated by MockGen. DO NOT EDIT!
// Source: finalize.go

package finalize_test

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of Yarn interface
type MockYarn struct {
	ctrl     *gomock.Controller
	recorder *_MockYarnRecorder
}

// Recorder for MockYarn (not exported)
type _MockYarnRecorder struct {
	mock *MockYarn
}

func NewMockYarn(ctrl *gomock.Controller) *MockYarn {
	mock := &MockYarn{ctrl: ctrl}
	mock.recorder = &_MockYarnRecorder{mock}
	return mock
}

func (_m *MockYarn) EXPECT() *_MockYarnRecorder {
	return _m.recorder
}

func (_m *MockYarn) Build() error {
	ret := _m.ctrl.Call(_m, "Build")
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockYarnRecorder) Build() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Build")
}

// Mock of NPM interface
type MockNPM struct {
	ctrl     *gomock.Controller
	recorder *_MockNPMRecorder
}

// Recorder for MockNPM (not exported)
type _MockNPMRecorder struct {
	mock *MockNPM
}

func NewMockNPM(ctrl *gomock.Controller) *MockNPM {
	mock := &MockNPM{ctrl: ctrl}
	mock.recorder = &_MockNPMRecorder{mock}
	return mock
}

func (_m *MockNPM) EXPECT() *_MockNPMRecorder {
	return _m.recorder
}

func (_m *MockNPM) Build() error {
	ret := _m.ctrl.Call(_m, "Build")
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockNPMRecorder) Build() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Build")
}

func (_m *MockNPM) Rebuild() error {
	ret := _m.ctrl.Call(_m, "Rebuild")
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockNPMRecorder) Rebuild() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Rebuild")
}

// Mock of Manifest interface
type MockManifest struct {
	ctrl     *gomock.Controller
	recorder *_MockManifestRecorder
}

// Recorder for MockManifest (not exported)
type _MockManifestRecorder struct {
	mock *MockManifest
}

func NewMockManifest(ctrl *gomock.Controller) *MockManifest {
	mock := &MockManifest{ctrl: ctrl}
	mock.recorder = &_MockManifestRecorder{mock}
	return mock
}

func (_m *MockManifest) EXPECT() *_MockManifestRecorder {
	return _m.recorder
}

func (_m *MockManifest) RootDir() string {
	ret := _m.ctrl.Call(_m, "RootDir")
	ret0, _ := ret[0].(string)
	return ret0
}

func (_mr *_MockManifestRecorder) RootDir() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "RootDir")
}
